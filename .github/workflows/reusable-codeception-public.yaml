
name: "Reusable codeception tests for public repositories"

on:
  workflow_call:
    inputs:
      PIMCORE_PROJECT_ROOT:
        required: true
        type: string
      APP_ENV:
        required: false
        default: "test"
        type: string
      PIMCORE_TEST:
        required: false
        default: "1"
        type: string
      PIMCORE_TEST_DB_DSN:
        required: true
        type: string
      PIMCORE_TEST_REDIS_DSN:
        required: true
        type: string      
      MINIO_ACCESS_KEY:
        required: true
        type: string                
      MINIO_SECRET_KEY:     
        required: true
        type: string
      php-version:
        required: true
        default: "8.3"
        type: string
      database: 
        required: true
        type: string
      dependencies:
        required: false
        type: string
        default: "highest"
      experimental:
        required: false
        type: boolean
        default: false
      storage:  
        required: false
        type: string
        default: "local"
      symfony:
        required: false
        type: string
        default: ""
      composer-options:  
        required: false
        type: string
        default: ""
      repository:
        required: true
        type: string
    secrets:
      COMPOSER_PIMCORE_REPO_PACKAGIST_TOKEN:
        required: false
      SSH_PRIVATE_KEY_PIMCORE_DEPLOYMENTS_USER:
        required: false
      GOOGLE_CLIENT_ID:
        required: false
      GOOGLE_CLIENT_SECRET:
        required: false
      PIMCORE_INSTANCE_IDENTIFIER:
        required: false
      PIMCORE_ENCRYPTION_SECRET:
        required: false
      PIMCORE_PRODUCT_KEY:
        required: false        
env:
    PIMCORE_PROJECT_ROOT: ${{ inputs.PIMCORE_PROJECT_ROOT }}
    APP_ENV: ${{ inputs.APP_ENV }}
    PIMCORE_TEST: ${{ inputs.PIMCORE_TEST }}
    PIMCORE_TEST_DB_DSN: ${{ inputs.PIMCORE_TEST_DB_DSN }}
    PIMCORE_TEST_REDIS_DSN: ${{ inputs.PIMCORE_TEST_REDIS_DSN }}
    MINIO_ACCESS_KEY: ${{ inputs.MINIO_ACCESS_KEY }}
    MINIO_SECRET_KEY: ${{ inputs.MINIO_SECRET_KEY }}
    PIMCORE_INSTANCE_IDENTIFIER: ${{ secrets.PIMCORE_INSTANCE_IDENTIFIER }}
    PIMCORE_ENCRYPTION_SECRET: ${{ secrets.PIMCORE_ENCRYPTION_SECRET }}
    PIMCORE_PRODUCT_KEY: ${{ secrets.PIMCORE_PRODUCT_KEY }}

jobs:
    codeception-tests:
        name: "Codeception tests"
        runs-on: "ubuntu-22.04"
        continue-on-error: ${{ inputs.experimental }}
        services:
            minio:
                image: bitnami/minio:latest
                ports:
                    - 9000:9000
                env:
                    MINIO_ROOT_USER: "${{ env.MINIO_ACCESS_KEY }}"
                    MINIO_ROOT_PASSWORD: "${{ env.MINIO_SECRET_KEY }}"
                    MINIO_SERVER_ACCESS_KEY: "${{ env.MINIO_ACCESS_KEY }}"
                    MINIO_SERVER_SECRET_KEY: "${{ env.MINIO_SECRET_KEY }}"
                    MINIO_DEFAULT_BUCKETS: "asset,assetcache,thumbnail,version,recyclebin,admin,emaillog,temp,applicationlog"
                options: --name minio-server
            redis:
                image: redis
                ports:
                    - 63379:6379
            mariadb:
                image: "${{ inputs.database }}"
                ports:
                    - 33006:3306
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes

        steps:
            - name: "Checkout code"
              uses: "actions/checkout@v4"
              with:
                repository: ${{ inputs.repository}}

            - uses: "actions/setup-node@v4"
              with:
                  node-version: 'lts/*'

            - name: "Install PHP"
              uses: "shivammathur/setup-php@v2"
              with:
                  coverage: "none"
                  extensions: imagick
                  ini-values: display_errors=On, display_startup_errors=On, error_reporting=32767
                  php-version: "${{ inputs.php-version }}"

            - name: Verify MariaDB connection
              run: |
                  cp .github/ci/files/.my.cnf ~/.my.cnf
                  while ! mysqladmin ping --silent; do
                    sleep 1
                  done

            - name: "Setup Pimcore environment"
              env:
                  PIMCORE_STORAGE: "${{ inputs.storage }}"
              run: |
                  mysql -e "CREATE DATABASE pimcore_test CHARSET=utf8mb4;"
                  .github/ci/scripts/setup-pimcore-environment.sh

            - name: "Set Symfony version constraint in composer.json"
              env:
                  SYMFONY_VERSION: "${{ inputs.symfony }}"
              run: |
                  if [ ! -z "$SYMFONY_VERSION" ]; then
                      .github/ci/scripts/symfony-require-dev.sh
                  fi

            - name: "Install dependencies with Composer"
              uses: "ramsey/composer-install@v2"
              with:
                  dependency-versions: "${{ inputs.dependencies }}"
                  composer-options: "${{ inputs.composer-options }}"

            - name: "Test environment infos"
              run: |
                  mysql -e "SELECT VERSION();"
                  php -i
                  ./bin/console debug:config flysystem

            - name: "Run Codeception"
              run: "vendor/bin/codecept run -c . -vvv --xml"
