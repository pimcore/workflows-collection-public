name: "Codeception tests"

on:
  workflow_call:
    inputs:
      APP_ENV:
        required: true
        type: string
      PIMCORE_TEST:
        required: true
        type: string
    secrets:
      COMPOSER_PIMCORE_REPO_PACKAGIST_TOKEN:
        required: true
      SSH_PRIVATE_KEY_PIMCORE_DEPLOYMENTS_USER:
        required: true

jobs:
  codeception-tests:
    name: "Codeception tests"
    runs-on: "ubuntu-20.04"
    continue-on-error: ${{ matrix.experimental }}
    env:
      PIMCORE_TEST_DB_DSN: "mysql://root@127.0.0.1:33006/pimcore_test?serverVersion=${{ matrix.server_version }}"
      PIMCORE_PROJECT_ROOT: ${{ github.workspace }}
      APP_ENV: ${{ inputs.APP_ENV }}
      PIMCORE_TEST: ${{ inputs.PIMCORE_TEST }}
    strategy:
      matrix:
        include:
          - {
              php-version: 8.2,
              database: "mariadb:10.7",
              server_version: "10.7.7-MariaDB-1:10.7.7+maria~ubu2004",
              dependencies: highest,
              experimental: false,
            }
          - {
              php-version: 8.2,
              database: "mariadb:10.7",
              server_version: "10.7.7-MariaDB-1:10.7.7+maria~ubu2004",
              dependencies: highest,
              pimcore_version: "11.x-dev as 11.99.9",
              experimental: true,
            }

    services:
      mariadb:
        image: "${{ matrix.database }}"
        ports:
          - 33006:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: imagick
          ini-values: display_errors=On, display_startup_errors=On, error_reporting=32767
          php-version: "${{ matrix.php-version }}"

      - name: Verify MariaDB connection
        run: |
          cp .github/ci/files/.my.cnf ~/.my.cnf
          while ! mysqladmin ping --silent; do
            sleep 1
          done
      - name: "Setup Pimcore environment"
        run: |
          mysql -e "CREATE DATABASE pimcore_test CHARSET=utf8mb4;"
          chmod 755 .github/ci/scripts/setup-pimcore-environment.sh
          .github/ci/scripts/setup-pimcore-environment.sh

      - name: Install SSH Key # this is necessary for Composer to be able to clone source from pimcore/ee-pimcore
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY_PIMCORE_DEPLOYMENTS_USER }}
          known_hosts: ".... we add this in the next step ;-)"

      - name: "Add authentication for private pimcore packages"
        run: |
          composer config repositories.private-packagist composer https://repo.pimcore.com/github-actions/
          composer config --global --auth http-basic.repo.pimcore.com github-actions ${{ secrets.COMPOSER_PIMCORE_REPO_PACKAGIST_TOKEN }}

      - name: "Update Pimcore version"
        env:
          PIMCORE_VERSION: "${{ matrix.pimcore_version }}"
        run: |
          if [ ! -z "$PIMCORE_VERSION" ]; then
                composer require --no-update pimcore/pimcore:"${PIMCORE_VERSION}"
          fi
      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: "Run Codeception"
        run: "vendor/bin/codecept run -c . -vvv --xml"
