name: "Codeception tests"

on:
  workflow_call:
    inputs:
      APP_ENV:
        required: true
        type: string
      PIMCORE_TEST:
        required: true
        type: string
      PRIVATE_REPO:
        required: true
        type: string
      PHP_VERSION:
        required: true
        type: string
      DATABASE:
        required: false
        type: string
        default: "mariadb:10.7"
      SERVER_VERSION:
        required: false
        type: string
      DEPENDENCIES:
        required: true
        type: string
      EXPERIMENTAL:
        required: true
        type: string
      PIMCORE_VERSION:
        required: false
        type: string
      COVERAGE:
        required: false
        type: string
        default: "none"

jobs:
  codeception-tests:
    name: "Codeception tests"
    runs-on: "ubuntu-20.04"
    continue-on-error: ${{ inputs.EXPERIMENTAL == 'true' }}
    env:
      PIMCORE_TEST_DB_DSN: "mysql://root@127.0.0.1:33006/pimcore_test"
      PIMCORE_PROJECT_ROOT: ${{ github.workspace }}
      APP_ENV: ${{ inputs.APP_ENV }}
      PIMCORE_TEST: ${{ inputs.PIMCORE_TEST }}
    services:
      mariadb:
        image: "${{ inputs.DATABASE }}"
        ports:
          - 33006:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "${{ inputs.COVERAGE }}"
          extensions: imagick
          ini-values: display_errors=On, display_startup_errors=On, error_reporting=32767
          php-version: "${{ inputs.PHP_VERSION }}"

      - name: Verify MariaDB connection
        run: |
          cp .github/ci/files/.my.cnf ~/.my.cnf
          while ! mysqladmin ping --silent; do
            sleep 1
          done

      - name: "Create Database"
        run: |
          mysql -e "CREATE DATABASE pimcore_test CHARSET=utf8mb4;"

      - name: "Setup Pimcore environment"
        run: |
          chmod 755 .github/ci/scripts/setup-pimcore-environment.sh
          .github/ci/scripts/setup-pimcore-environment.sh

      - name: "Add private pimcore packages"
        if: ${{ inputs.PRIVATE_REPO == 'true' }}
        run: |
          composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}
          composer config repositories.pimcore-pimcore vcs git@github.com:pimcore/ee-pimcore.git

      - name: "Add public pimcore packages"
        if: ${{ inputs.PRIVATE_REPO == 'false' }}
        run: |
          composer config repositories.pimcore-pimcore vcs git@github.com:pimcore/pimcore.git

      - name: "Update Pimcore version"
        env:
          PIMCORE_VERSION: "${{ inputs.PIMCORE_VERSION }}"
        run: |
          if [ ! -z "$PIMCORE_VERSION" ]; then
                composer require --no-update pimcore/pimcore:"${PIMCORE_VERSION}"
          fi

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "${{ inputs.DEPENDENCIES }}"

      - name: "Run Codeception"
        run: "vendor/bin/codecept run -c . -vvv --xml"
