name: "Reusable composer vulnerabilities check"

on:
    workflow_call:
        inputs:
            php-version:
              required: false
              default: "8.2"
              type: string
            branch:
              required: true
              type: string
            ignore-list:
              required: false
              type: string
              description: Ignore list type (e.g., public, private, lts)
            private-repo:
              required: false
              default: false
              type: boolean

permissions:
  contents: read

jobs:
    composer-checks:
        name: "Composer Checks"
        runs-on: "ubuntu-latest"
        env: 
          IGNORE_LIST_KEY: ${{ inputs.ignore-list }}
        steps:
            - name: "Checkout depdendent workflow code"
              uses: "actions/checkout@v4"
              with:
                  ref: ${{ inputs.branch }}

            - name: "Install PHP"
              uses: "shivammathur/setup-php@v2"
              with:
                  coverage: "none"
                  php-version: ${{ inputs.php-version }}

            - name: Install SSH Key # this is necessary for Composer to be able to clone source from pimcore/ee-pimcore
              if: ${{ inputs.private-repo == true }}
              uses: shimataro/ssh-key-action@v2
              with:
                key: ${{ secrets.SSH_PRIVATE_KEY_PIMCORE_DEPLOYMENTS_USER }}
                known_hosts: ".... we add this in the next step ;-)"
    
            - name: "Add authentication for private pimcore packages"
              if: ${{ inputs.private-repo == true }}
              run: |
                composer config repositories.private-packagist composer https://repo.pimcore.com/github-actions/
                composer config --global --auth http-basic.repo.pimcore.com github-actions ${{ secrets.COMPOSER_PIMCORE_REPO_PACKAGIST_TOKEN }}

            - name: Get Composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache Composer dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}

            - name: "Install dependencies with Composer"
              uses: "ramsey/composer-install@v2"
              with:
                  dependency-versions: "highest"
                  composer-options: "--no-scripts"

            - name: "Check for security vulnerabilities"
              id: vulnerabilities
              continue-on-error: true
              run: |
                VULNERABILITIES=$(composer audit || true)
                
                echo "Raw composer audit output:"
                echo "$VULNERABILITIES"
            
                if echo "$VULNERABILITIES" | grep -E '.*[1-9][0-9]*.*'; then
                    echo "Security vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
                    echo "$VULNERABILITIES" | awk '{print "- " $0}' >> $GITHUB_STEP_SUMMARY
                    {
                      echo "VULNERABILITIES_ENV<<EOF"
                      echo "$VULNERABILITIES"
                      echo "EOF"
                    } >> $GITHUB_ENV
                    exit 1
                fi

            - name: Send results of previous checks to Microsoft Teams
              if: steps.vulnerabilities.outcome == 'failure'
              uses: aliencube/microsoft-teams-actions@v0.8.0
              with:
                webhook_uri: ${{ secrets.TEAMS_COMPOSER_VULNERABILITY_URI }}
                title: ${{ github.repository }}@${{ github.ref_name }} outdated - vulnerabilities report
                summary: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}} 
                text: |
                  Please check the following link for details: 
                  ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
            
                  **Vulnerabilities found:**
                  ```
                  ${{ env.VULNERABILITIES_ENV }}
                  ```
            
                  If the list is too long, please refer to the link above.
